<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<munit:config name="user-update.xml" />
	<munit:test name="patch:\v1\users\(username)|positive-scenario" doc:id="472a79c7-a037-427e-a308-e4a7417dc8ba" description="Test">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Get User by Username" doc:id="06436341-c1eb-4a29-8b94-09ec55e13bae" processor="db:query-single" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get User by Username" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java --- readUrl('classpath://user/retrieval/external/get-user-by-username-sql-result.json','application/json')]" mediaType="application/java" />
					<munit-tools:variables >
						<munit-tools:variable key="httpStatus" value="#[200]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock  Update User" doc:id="11500d1d-c69f-4ff9-9cff-7bafaad34fec" processor="db:update" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update User" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="Update User" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[1]" mediaType="application/java" />
					<munit-tools:variables >
						<munit-tools:variable key="httpStatus" value="#[200]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Incoming Event" doc:id="3493a84c-1424-4a3d-83b7-5e0dabbdd58a" >
				<munit:payload value="#[MunitTools::getResourceAsString('user/update/patch-user-by-username-request-example.json')]" mediaType="application/json" />
				<munit:attributes value="#[{ method : 'GET', headers : { 'Security-Key' : 'abcdefg123456789'}, uriParams : { 'username' : 'jeromevyabut' }}]" />
			</munit:set-event>
			<flow-ref doc:name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config" doc:id="163f3ca4-77cd-4fa0-b73c-7f41ec324742" name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert Response Message" doc:id="41ad8846-31a7-4cd8-99e5-2b2f9fff6a30" actual="#[payload.message]" expected="#['Username: jeromevyabut has been updated.']" />
			<munit-tools:assert-equals doc:name="Assert Http Status Code" doc:id="e420dc80-7cf7-4432-9dfe-0c7c3fd4722e" actual="#[vars.httpStatus]" expected="#[200]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="patch:\v1\users\(username)|negative-scenario-user-not-found" doc:id="331b3ce6-8f15-489b-a723-4a3ec3603e74" description="Test" expectedErrorType="USER:NOT_FOUND" expectedErrorDescription="jeromevyabut does not exist from the records">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Get User by Username" doc:id="71b1c075-0e70-4104-a033-46f16935183f" processor="db:query-single" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get User by Username" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#['']" mediaType="application/java" />
					<munit-tools:variables >
						<munit-tools:variable key="httpStatus" value="#[200]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			
</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Incoming Event" doc:id="8d122712-1adb-45d5-9cef-fe4597a5946f" >
				<munit:payload value="#[MunitTools::getResourceAsString('user/update/patch-user-by-username-request-example.json')]" mediaType="application/json" />
				<munit:attributes value="#[{ method : 'GET', headers : { 'Security-Key' : 'abcdefg123456789'}, uriParams : { 'username' : 'jeromevyabut' }}]" />
			</munit:set-event>
			<flow-ref doc:name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config" doc:id="71e15c11-fd16-4286-8b62-e45d0201b04b" name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config"/>
		</munit:execution>
	</munit:test>
	<munit:test name="patch:\v1\users\(username)|db-connectivity-issue" doc:id="0d4eb9fa-cb20-4297-bed7-dcc1a3dba261" description="Test" expectedErrorType="DB:CONNECTIVITY">
		<munit:behavior>
			<munit-tools:mock-when doc:name="Mock Get User by Username DB Connectivity Error" doc:id="2aff451d-f415-4809-9aec-3ddc71e6de2c" processor="db:query-single" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Get User by Username" attributeName="doc:name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#['']" mediaType="application/java" />
					<munit-tools:error typeId="DB:CONNECTIVITY" />
					<munit-tools:variables >
						<munit-tools:variable key="httpStatus" value="#[200]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			

</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Incoming Event" doc:id="74e47c48-c5d6-45d8-bdbb-af537b6cede6" >
				<munit:payload value="#[MunitTools::getResourceAsString('user/update/patch-user-by-username-request-example.json')]" mediaType="application/json" />
				<munit:attributes value="#[{ method : 'GET', headers : { 'Security-Key' : 'abcdefg123456789'}, uriParams : { 'username' : 'jeromevyabut' }}]" />
			</munit:set-event>
			<flow-ref doc:name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config" doc:id="f0a2472c-129c-45e8-b64b-54e64b6214b9" name="patch:\v1\users\(username):application\json:jy-deloitte-exam-db-sys-api-config"/>
		</munit:execution>
	</munit:test>
</mule>
